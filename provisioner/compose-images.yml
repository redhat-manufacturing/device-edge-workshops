---

- name: setup image builder, compose images
  hosts:
    - edge_management
    - edge_remote_management
    - hypervisors
  vars:
    image_builder_http_port: 18080
    ansible_become_timeout: 120 
  become: true
  pre_tasks:

    - name: Include workshop or demo variables
      include_vars:
        file: "{{ playbook_dir }}/workshop_vars/{{ workshop_type }}.yml"
      when: workshop_type is defined
      ignore_errors: yes

    - name: Include demo variables
      include_vars:
        file: "{{ playbook_dir }}/demo_vars/{{ demo_type }}.yml"
      when: demo_type is defined
      ignore_errors: yes

    - name: rhel8 tasks
      when:
        - ansible_distribution_major_version|int == 8
      block:
        - name: workaround for https://access.redhat.com/solutions/6973651
          ansible.builtin.dnf:
            name: python36
        - name: workaround for not actually supporting dnf modules
          ansible.builtin.shell:
            cmd: dnf module enable nodejs:16 -y
          changed_when: false

    - name: use role to setup Image Builder
      ansible.builtin.include_role:
        name: infra.osbuild.setup_server

  tasks:
    - name: handle image builder being image builder
      when:
        - (ansible_distribution_major_version|int == 8 or ansible_distribution_major_version|int == 9)
        - images_to_compose is defined

      block:
        - name: build images via builder role
          ansible.builtin.include_role:
            name: ../roles/infra_osbuild_builder_wrapper
          vars:
            builder_compose_type: "{{ image.type }}"
            builder_compose_pkgs: "{{ image.packages }}"
            builder_custom_repos: "{{ image.custom_repos | default('[]') }}"
            builder_blueprint_distro: "{{ image.distro | default(omit) }}"
            builder_compose_containers: "{{ image.containers | default(omit) }}"
            builder_rhsm_repos: "{{ image.rhsm_repos | default('[]') }}"
            builder_compose_customizations: "{{ image.customizations | default('{}') }}"
            builder_request_timeout: 1200
          loop: "{{ images_to_compose }}"
          loop_control:
            loop_var: image
  
  post_tasks:
    - name: adjust for non-standard port
      when:
        - image_builder_http_port is defined
      block:
        - name: adjust the standard listening port
          ansible.builtin.lineinfile:
            path: /etc/httpd/conf/httpd.conf
            regexp: '^Listen'
            line: 'Listen {{ image_builder_http_port }}'
          register: _httpd_config
        - name: allow bind to new port
          community.general.seport:
            ports: "{{ image_builder_http_port }}"
            proto: tcp
            setype: http_port_t
            state: present
        - name: allow port through firewalld
          ansible.posix.firewalld:
            permanent: true
            immediate: true
            port: "{{ image_builder_http_port }}/tcp"
            state: enabled
        - name: restart httpd
          ansible.builtin.systemd:
            name: httpd
            state: restarted


    - name: Download standard RHEL ISO
      when:
        - rhel_iso_sha_value is defined
      block:
        - name: Generating an access token
          uri:
            url: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
            method: POST
            body_format: form-urlencoded
            return_content: true
            body:
              grant_type: "refresh_token"
              client_id: "rhsm-api"
              refresh_token: "{{ offline_token }}"
          register: temp_token
          until: temp_token is not failed
          retries: 15
          delay: 20

        - name: Download RHEL ISO
          get_url:
            url: "https://api.access.redhat.com/management/v1/images/{{ rhel_iso_sha_value }}/download"
            headers:
              accept: "application/json"
              Authorization: "Bearer {{ temp_token.json.access_token }}"
            dest: "/home/{{ ansible_user }}/rhel.iso"
            checksum: "sha256: {{ rhel_iso_sha_value }}"
          register: download_rhel_iso
          until: download_rhel_iso is not failed
          retries: 15
          delay: 20