---

- name: allow access to workshop services
  hosts:
    - edge_management
    - edge_local_management
  vars_files:
    - "{{ playbook_dir }}/workshop_vars/{{ workshop_type }}.yml"
  become: true
  tasks:
    - name: ensure firewalld is present
      ansible.builtin.dnf:
        name:
          - firewalld
          - python3-firewall
    - name: enable/start firewalld service
      ansible.builtin.systemd:
        name: firewalld
        state: started
        enabled: true
    - name: allow ports through firewall
      ansible.posix.firewalld:
        port: "{{ external_service.port }}/{{ external_service.protocol | default('tcp') }}"
        zone: external
        permanent: true
        immediate: true
        state: enabled
      loop: "{{ allowed_external_services }}"
      loop_control:
        loop_var: external_service
      when: allowed_external_services is defined

    - name: allow SOCKs port through firewall
      ansible.posix.firewalld:
        port: "1080/tcp"
        permanent: true
        immediate: true
        state: enabled


    - name: allow SOCKs port through firewall
      ansible.posix.firewalld:
        port: "1080/tcp"
        permanent: true
        immediate: true
        zone: external
        state: enabled


    - name: Set up SOCKs Tunnel
      shell:  |
        set -x
        if [ "$(id -u)" = "0" ]; then
          ssh-keygen -t rsa -f /root/.ssh/id_rsa -N ""
          cat /root/.ssh/id_rsa.pub >> /root/.ssh/authorized_keys
          chmod 600 /root/.ssh/authorized_keys
        else
          ssh-keygen -t rsa -f /home/{{ ansible_user }}/.ssh/id_rsa -N ""
          cat /home/{{ ansible_user }}/.ssh/id_rsa.pub >> /home/{{ ansible_user }}/.ssh/authorized_keys
          #chmod 600 /home/{{ ansible_user }}/.ssh/authorized_keys
        fi
        ssh -o StrictHostKeyChecking=no -N -f -D *:1080 localhost
      async: 600
      poll: 0

    - name: Create systemd service unit file
      ansible.builtin.copy:
        content: |
          [Unit]
          Description="SOCKs Tunnel"

          [Service]
          ExecStart=/bin/bash -c "ssh -o StrictHostKeyChecking=no -N -D *:1080 localhost"

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/socks-tunnel.service

    - name: Start and enable the socks-tunnel.service service
      systemd:
        name: socks-tunnel.service
        enabled: yes
        state: started

    - name: Reload systemd
      systemd:
        daemon_reload: yes

    - name: Add entries to /etc/hosts
      become: true
      lineinfile:
        dest: /etc/hosts
        line: "{{ ansible_host }} {{ item.value.domain }}"
      loop: "{{ route53_domains | dict2items }}"
      when: (run_in_aws is not defined or not run_in_aws | bool) and route53_domains is defined
    - name: "Refresh vars"
      include_vars:
        file: "workshop_vars/{{ workshop_type }}.yml"
      when:
        - run_in_aws is defined
        - run_in_aws | bool
    - name: set local /etc/host for external services
      become: true
      lineinfile:
        dest: /etc/hosts
        line: "{{ edge_remote_management_ext_ip }} {{ item.value.domain }}"
      loop: "{{ route53_domains | dict2items }}"
      when:
        - run_in_aws is defined
        - run_in_aws | bool
    - name: Add entries to /etc/hosts
      become: true
      lineinfile:
        dest: /etc/hosts
        line: "{{ edge_remote_management_ext_ip }} controller-node"
      when:
        - run_in_aws is defined
        - run_in_aws | bool

    - name: Add entries to /etc/hosts
      become: true
      lineinfile:
        dest: /etc/hosts
        line: "{{ edge_remote_management_ext_ip }} edge-manager-aws.local"
      when:
        - run_in_aws is defined
        - run_in_aws | bool

    - name: Add entries to /etc/hosts
      become: true
      lineinfile:
        dest: /etc/hosts
        line: "127.0.0.1 controller-node"
      when: run_in_aws is not defined or not run_in_aws | bool

    - name: Add entries to /etc/hosts
      become: true
      lineinfile:
        dest: /etc/hosts
        line: "127.0.0.1 execution-node"
      when:
        - run_in_aws is defined
        - run_in_aws | bool